@model FloralHaven.Models.ProductDeleteViewModal

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Edit";
}

@section vendorscss{
    <link rel="stylesheet" href="~/adminassets/vendor/libs/node-waves/node-waves.css" />
    <link rel="stylesheet" href="~/adminassets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
    <link rel="stylesheet" href="~/adminassets/vendor/libs/dropzone/dropzone.css" />
}

@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script>
        $("#refreshbutton").prepend('<i id="loading" class="ti ti-reload fa-spin" style="display:none;"></i>&nbsp;')
        $("#refreshbutton").click();
    </script>
}

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-6 row-gap-4">
        <div class="d-flex flex-column justify-content-center">
            <h4 class="mb-1">Delete Product</h4>
            <p class="mb-0">Product #@Model.Id</p>
        </div>
        <div class="d-flex align-content-center flex-wrap gap-4">
            <div class="d-flex gap-4">
                <a class="btn btn-label-secondary" href="@Url.Action("ProductList","Product")">Back</a>
            </div>
            @using (Html.BeginForm("Delete", "Product", new { id = Model.Id }, FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-danger"><i class="ti ti-trash"></i>&nbsp;Delete</button>
            }
        </div>
    </div>

    <div class="row g-4">
        <div class="col-12 col-lg-6">
            <div class="card mb-6">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0 card-title">Are you sure you want to delete this?</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="form-label col-4 col-lg-3">
                            @Html.DisplayNameFor(model => model.Id)
                        </dt>
                        <dd class="col-8 col-lg-9">
                            @Html.DisplayFor(model => model.Id)
                        </dd>
                        <dt class="form-label col-4 col-lg-3">
                            @Html.DisplayNameFor(model => model.Name)
                        </dt>
                        <dd class="col-8 col-lg-9">
                            @Html.DisplayFor(model => model.Name)
                        </dd>
                        <dt class="form-label col-4 col-lg-3">
                            @Html.DisplayNameFor(model => model.Handle)
                        </dt>
                        <dd class="col-8 col-lg-9">
                            @Html.DisplayFor(model => model.Handle)
                        </dd>
                        <dt class="form-label col-4 col-lg-3">
                            @Html.DisplayNameFor(model => model.CategoryId)
                        </dt>
                        <dd class="col-8 col-lg-9">
                            @Html.DisplayFor(model => model.CategoryId)
                        </dd>
                        <dt class="form-label col-4 col-lg-3">
                            @Html.DisplayNameFor(model => model.CategoryName)
                        </dt>
                        <dd class="col-8 col-lg-9">
                            @Html.DisplayFor(model => model.CategoryName)
                        </dd>
                        <dt class="form-label col-4 col-lg-3">
                            @Html.DisplayNameFor(model => model.Price)
                        </dt>
                        <dd class="col-8 col-lg-9">
                            @Html.DisplayFor(model => model.Price)
                        </dd>
                        <dt class="form-label col-4 col-lg-3">
                            @Html.DisplayNameFor(model => model.SalePrice)
                        </dt>
                        <dd class="col-8 col-lg-9">
                            @Html.DisplayFor(model => model.SalePrice)
                        </dd>
                        <dt class="form-label col-4 col-lg-3">
                            @Html.DisplayNameFor(model => model.SKU)
                        </dt>
                        <dd class="col-8 col-lg-9">
                            @Html.DisplayFor(model => model.SKU)
                        </dd>
                        <dt class="form-label col-4 col-lg-3">
                            @Html.DisplayNameFor(model => model.Description)
                        </dt>
                        <dd class="col-8 col-lg-9">
                            @Html.Raw(Model.Description)
                        </dd>
                        <dt class="form-label col-4 col-lg-3">
                            @Html.DisplayNameFor(model => model.Stock)
                        </dt>
                        <dd class="col-8 col-lg-9">
                            @Html.DisplayFor(model => model.Stock)
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
        <div class="col-12 col-lg-6">
            <div class="card mb-6">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0 card-title">This Product Images</h5>
                    @Ajax.ActionLink("Refresh", "GetProductImages", new { productId = Model.Id }, new AjaxOptions { HttpMethod = "GET", InsertionMode = InsertionMode.Replace, UpdateTargetId = "productpictures", LoadingElementId = "loading", LoadingElementDuration = 300 }, new { @class = "btn btn-primary mb-2", id = "refreshbutton" })
                </div>
                <div class="card-body">
                    <div id="productpictures" class="dropzone border-solid opacity-100 text-center"></div>
                </div>
            </div>
        </div>
    </div>
</div>